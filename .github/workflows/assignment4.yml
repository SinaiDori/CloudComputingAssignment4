name: assignment4

on:
  workflow_dispatch:  # Manual trigger

jobs:

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Start Time
        run: echo "$(date -Iminutes)" > log.txt

      - name: Add Submitter Name to Log
        run: "echo 'Omer Bengal,Sinay Dori,Yair Ben Zur' >> log.txt"

      - name: Build Docker Images and Check Build Success
        run: |
          set +e
          docker build -t stocks-service -f ./StocksService/Dockerfile .
          EXIT1=$?
          docker build -t capital-gains-service -f ./CapitalGainsService/Dockerfile .
          EXIT2=$?
          if [ $EXIT1 -eq 0 ] && [ $EXIT2 -eq 0 ]; then
              echo "image successfully built" >> log.txt
          else
              echo "image not able to be built" >> log.txt
          fi
          set -e

      - name: Upload Build Log File
        uses: actions/upload-artifact@v4
        with:
          name: build_log
          path: log.txt

  test:
    name: Run Pytest Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Log File
        uses: actions/download-artifact@v4
        with:
          name: build_log
          path: .

      - name: Start Application with Docker Compose
        run: docker compose up -d

      - name: Wait for Services to Start
        run: sleep 10

      - name: Check Container Status
        run: |
          RUNNING_COUNT=$(docker ps --filter "status=running" -q | wc -l)
          if [ "$RUNNING_COUNT" -eq 3 ]; then
              echo "Container up and running" >> log.txt
          else
              echo "Container failed to run" >> log.txt
          fi

      - name: Install Pytest
        run: pip install pytest

      - name: Run Pytest
        run: pytest -v tests/assn4_tests.py > assn4_test_results.txt || true

      - name: Check Test Results
        if: always()
        run: |
          if grep -q "FAILED" assn4_test_results.txt; then
            echo "tests failed" >> log.txt
          else
            echo "tests succeeded" >> log.txt
          fi

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test_results
          path: assn4_test_results.txt

      - name: Upload Test Results Log File
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test_log
          path: log.txt

  query:
    name: Run Query Tests
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Start Application with Docker Compose
        run: docker compose up -d

      - name: Wait for Services to Start
        run: sleep 10

      - name: Post Stocks 1-6
        run: |
          curl -X POST http://localhost:5001/stocks -H "Content-Type: application/json" -d '{"name": "NVIDIA Corporation", "symbol": "NVDA", "purchase price": 134.66, "purchase date": "18-06-2024", "shares": 7}'
          curl -X POST http://localhost:5001/stocks -H "Content-Type: application/json" -d '{"name": "Apple Inc.", "symbol": "AAPL", "purchase price": 183.63, "purchase date": "22-02-2024", "shares": 19}'
          curl -X POST http://localhost:5001/stocks -H "Content-Type: application/json" -d '{"name": "Alphabet Inc.", "symbol": "GOOG", "purchase price": 140.12, "purchase date": "24-10-2024", "shares": 14}'
          curl -X POST http://localhost:5001/stocks -H "Content-Type: application/json" -d '{"name": "Tesla, Inc.", "symbol": "TSLA", "purchase price": 194.58, "purchase date": "28-11-2022", "shares": 32}'
          curl -X POST http://localhost:5001/stocks -H "Content-Type: application/json" -d '{"name": "Microsoft Corporation", "symbol": "MSFT", "purchase price": 420.55, "purchase date": "09-02-2024", "shares": 35}'
          curl -X POST http://localhost:5001/stocks -H "Content-Type: application/json" -d '{"name": "Intel Corporation", "symbol": "INTC", "purchase price": 19.15, "purchase date": "13-01-2025", "shares": 10}'

      - name: Execute Queries from query.txt
        run: |
          touch response.txt
          while IFS= read -r line; do
            SERVICE=$(echo "$line" | cut -d':' -f1)
            QUERY=$(echo "$line" | cut -d':' -f2-)
            echo "query: $line" >> response.txt
            if [[ "$SERVICE" == "stocks" ]]; then
              curl -s "http://localhost:5001/stocks?$QUERY" >> response.txt
            elif [[ "$SERVICE" == "capital-gains" ]]; then
              curl -s "http://localhost:5003/capital-gains?$QUERY" >> response.txt
            fi
            echo "" >> response.txt
          done < query.txt

      - name: Upload Query Responses
        uses: actions/upload-artifact@v4
        with:
          name: query_responses
          path: response.txt
